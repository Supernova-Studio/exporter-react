{*

Injectable blueprint that represents Typography token as CSS string. 
Note that this only converts the value, actual name is provided somewhere else


Source data: Shadow Value (https://developers.supernova.io/design-system-data/tokens/typographies)
Note: Value is passed as `context` property because it is injected

{
  "id": string
  "name": string
  "description": string
  "tokenType": "Typography"
  "origin": ItemOrigin | null
  "value": {
    "font": {
      "family": string,
      "subfamily": string
      "referencedToken": Font | null
    },
    "fontSize": {
      "unit": "px",
      "measure": double
      "referencedToken": Measure | null
    },
    "letterSpacing": {
      "unit": "px",
      "measure": double
      "referencedToken": Measure | null
    },
    "lineHeight": {
      "unit": "px",
      "measure": double
      "referencedToken": Measure | null
    },
    "paragraphIndent": {
      "unit": "px",
      "measure": double
      "referencedToken": Measure | null
    },
    "textDecoration": "None" | "Underline" | "Strikethrough"
    "textCase": "Original" | "Upper" | "Lower" | "Camel"
    "referencedToken": Typography | null
  }
}


Rendered as:

{
  fontFamily: "string",
  fontStyle: "string",
  fontWeight: number,
  fontSize: "string",
  lineHeight: "string",
  letterSpacing: "string",
  textIndent: Measure,
}

*}
{[ inject "reference-wrapper" context buildReferenceMeta("Typography", context) ]}
{
  {[ let fontStyle = "normal" /]}
  {[ if ds.isFontItalic(context.font) ]}
    {[ set fontStyle = "italic" /]}
  {[/]}
  fontFamily: "{{ context.font.family }}",
  fontStyle: "{{ fontStyle }}",
  fontWeight: {{ ds.fontWeight(context.font) }},
  fontSize: {[ inject "rendered-measure" context context.fontSize /]},
  {[ if context.lineHeight ]}
  lineHeight: {[ inject "rendered-measure" context context.lineHeight /]},
  {[/]}
  letterSpacing: {[ inject "rendered-measure" context context.letterSpacing /]},
  textIndent: {[ inject "rendered-measure" context context.paragraphIndent /]},
}{[/]}